{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setError(\"\");\n  try {\n    const response = await fetch(\"http://localhost:5000/api/auth/professional-login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(professionalData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"Backend Error Response:\", errorText);\n      throw new Error(\"Login failed: \" + errorText);\n    }\n    const result = await response.json();\n    console.log(\"Professional Login Response:\", result);\n    if (!result.token || result.role !== \"professional\") {\n      throw new Error(\"Invalid server response: Missing token or incorrect role.\");\n    }\n\n    // Store authentication in local storage\n    localStorage.setItem(\"token\", result.token);\n    localStorage.setItem(\"role\", result.role);\n    localStorage.setItem(\"name\", result.name);\n    alert(\"Login successful!\");\n\n    // **Force reload to immediately switch to Professional Dashboard**\n    window.location.href = \"/professional-dashboard\";\n  } catch (error) {\n    console.error(\"Login Error:\", error.message);\n    setError(error.message);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setError","response","fetch","method","headers","body","JSON","stringify","professionalData","ok","errorText","text","console","error","Error","result","json","log","token","role","localStorage","setItem","name","alert","window","location","href","message"],"sources":["/home/donatech/justconnect/frontend/src/components/ProfessionalLogin.js"],"sourcesContent":["const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n  \n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/professional-login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(professionalData),\n      });\n  \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Backend Error Response:\", errorText);\n        throw new Error(\"Login failed: \" + errorText);\n      }\n  \n      const result = await response.json();\n      console.log(\"Professional Login Response:\", result);\n  \n      if (!result.token || result.role !== \"professional\") {\n        throw new Error(\"Invalid server response: Missing token or incorrect role.\");\n      }\n  \n      // Store authentication in local storage\n      localStorage.setItem(\"token\", result.token);\n      localStorage.setItem(\"role\", result.role);\n      localStorage.setItem(\"name\", result.name); \n  \n      alert(\"Login successful!\");\n  \n      // **Force reload to immediately switch to Professional Dashboard**\n      window.location.href = \"/professional-dashboard\";\n  \n    } catch (error) {\n      console.error(\"Login Error:\", error.message);\n      setError(error.message);\n    }\n  };\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,QAAQ,CAAC,EAAE,CAAC;EAEZ,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;MAChFC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,gBAAgB;IACvC,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEH,SAAS,CAAC;MACnD,MAAM,IAAII,KAAK,CAAC,gBAAgB,GAAGJ,SAAS,CAAC;IAC/C;IAEA,MAAMK,MAAM,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IACpCJ,OAAO,CAACK,GAAG,CAAC,8BAA8B,EAAEF,MAAM,CAAC;IAEnD,IAAI,CAACA,MAAM,CAACG,KAAK,IAAIH,MAAM,CAACI,IAAI,KAAK,cAAc,EAAE;MACnD,MAAM,IAAIL,KAAK,CAAC,2DAA2D,CAAC;IAC9E;;IAEA;IACAM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,MAAM,CAACG,KAAK,CAAC;IAC3CE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,MAAM,CAACI,IAAI,CAAC;IACzCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,MAAM,CAACO,IAAI,CAAC;IAEzCC,KAAK,CAAC,mBAAmB,CAAC;;IAE1B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,yBAAyB;EAElD,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACc,OAAO,CAAC;IAC5C3B,QAAQ,CAACa,KAAK,CAACc,OAAO,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}