{"ast":null,"code":"var _jsxFileName = \"/home/donatech/justconnect/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const register = async userData => {\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/auth/register\", userData);\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      setUser(data);\n      return data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Registration failed\";\n      console.error(\"Registration failed:\", message);\n      throw new Error(message); // Important for Signup.js to catch it\n    }\n  };\n  const login = async credentials => {\n    try {\n      let response;\n\n      // Determine if logging in as a professional (using name & contact)\n      if (credentials.email) {\n        response = await axios.post(\"http://localhost:5000/api/auth/login\", credentials);\n      } else {\n        response = await axios.post(\"http://localhost:5000/api/auth/professional-login\", {\n          name: credentials.name,\n          contact: credentials.contact\n        });\n      }\n      const {\n        data\n      } = response;\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      localStorage.setItem(\"role\", data.role); // Store role separately for role-based navigation\n      setUser(data);\n      return data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\";\n      console.error(\"Login failed:\", message);\n      throw new Error(message);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"role\");\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","register","userData","data","post","setItem","stringify","error","_error$response","_error$response$data","message","response","console","Error","login","credentials","email","name","contact","role","_error$response2","_error$response2$data","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/donatech/justconnect/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const register = async (userData) => {\n    try {\n      const { data } = await axios.post(\"http://localhost:5000/api/auth/register\", userData);\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      setUser(data);\n      return data;\n    } catch (error) {\n      const message = error.response?.data?.message || \"Registration failed\";\n      console.error(\"Registration failed:\", message);\n      throw new Error(message); // Important for Signup.js to catch it\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      let response;\n\n      // Determine if logging in as a professional (using name & contact)\n      if (credentials.email) {\n        response = await axios.post(\"http://localhost:5000/api/auth/login\", credentials);\n      } else {\n        response = await axios.post(\"http://localhost:5000/api/auth/professional-login\", {\n          name: credentials.name,\n          contact: credentials.contact,\n        });\n      }\n\n      const { data } = response;\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      localStorage.setItem(\"role\", data.role); // Store role separately for role-based navigation\n      setUser(data);\n      return data;\n    } catch (error) {\n      const message = error.response?.data?.message || \"Login failed\";\n      console.error(\"Login failed:\", message);\n      throw new Error(message);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"role\");\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, register, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}