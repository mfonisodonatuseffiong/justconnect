{"ast":null,"code":"var _jsxFileName = \"/home/donatech/justconnect/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\n\n// This is your predefined professionals list with emails and maybe default passwords:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst professionalsList = [{\n  id: 1,\n  name: \"Mfoniso Donatus\",\n  email: \"mfoniso@example.com\",\n  defaultPassword: \"pro123\"\n}, {\n  id: 2,\n  name: \"Jane Smith\",\n  email: \"jane@example.com\",\n  defaultPassword: \"pro123\"\n}\n// ...other professionals\n];\nconst Login = () => {\n  _s();\n  const {\n    setUser\n  } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Check if email matches a professional\n    const professional = professionalsList.find(pro => pro.email.toLowerCase() === email.toLowerCase());\n    if (professional) {\n      // Optional: check password matches defaultPassword for some security\n      if (password === professional.defaultPassword) {\n        // Login successful as professional\n        setUser({\n          email: professional.email,\n          name: professional.name,\n          role: \"professional\"\n        });\n        navigate(\"/professional-dashboard\"); // Redirect to professional dashboard\n        return;\n      } else {\n        setError(\"Incorrect password for professional login.\");\n        return;\n      }\n    }\n\n    // Otherwise, handle normal login for other users here (e.g., call API)\n\n    setError(\"User not found or incorrect credentials.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"xZPdYCYYsq78/gLhhEH8k+qnw6E=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","professionalsList","id","name","email","defaultPassword","Login","_s","setUser","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","professional","find","pro","toLowerCase","role","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","required","onChange","target","_c","$RefreshReg$"],"sources":["/home/donatech/justconnect/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\n\n// This is your predefined professionals list with emails and maybe default passwords:\nconst professionalsList = [\n  { id: 1, name: \"Mfoniso Donatus\", email: \"mfoniso@example.com\", defaultPassword: \"pro123\" },\n  { id: 2, name: \"Jane Smith\", email: \"jane@example.com\", defaultPassword: \"pro123\" },\n  // ...other professionals\n];\n\nconst Login = () => {\n  const { setUser } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Check if email matches a professional\n    const professional = professionalsList.find(\n      (pro) => pro.email.toLowerCase() === email.toLowerCase()\n    );\n\n    if (professional) {\n      // Optional: check password matches defaultPassword for some security\n      if (password === professional.defaultPassword) {\n        // Login successful as professional\n        setUser({ email: professional.email, name: professional.name, role: \"professional\" });\n        navigate(\"/professional-dashboard\"); // Redirect to professional dashboard\n        return;\n      } else {\n        setError(\"Incorrect password for professional login.\");\n        return;\n      }\n    }\n\n    // Otherwise, handle normal login for other users here (e.g., call API)\n\n    setError(\"User not found or incorrect credentials.\");\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          required\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          required\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}