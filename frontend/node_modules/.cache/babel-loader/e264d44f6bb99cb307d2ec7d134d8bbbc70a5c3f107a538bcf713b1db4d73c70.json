{"ast":null,"code":"var _jsxFileName = \"/home/donatech/justconnect/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { professionalsList } from \"../data/professionals\"; // import the list\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    login,\n    setUser\n  } = useContext(AuthContext);\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Check if user is in professionalsList (login without signup)\n    const matchedProfessional = professionalsList.find(pro => pro.email.toLowerCase() === credentials.email.toLowerCase());\n    if (matchedProfessional) {\n      // Automatically login as professional without signup\n      setUser({\n        email: credentials.email,\n        role: \"professional\",\n        name: matchedProfessional.name\n      });\n      navigate(\"/professional-dashboard\");\n      return;\n    }\n\n    // Otherwise, use normal login flow\n    try {\n      const userData = await login(credentials);\n      if (!userData || !userData.role) {\n        setError(\"Login failed. Please check your credentials.\");\n        return;\n      }\n      if (userData.role === \"admin\") {\n        navigate(\"/admin-dashboard\");\n      } else if (userData.role === \"user\") {\n        navigate(\"/user-dashboard\");\n      } else {\n        setError(\"Unrecognized user role.\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(\"Login failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email Address\",\n        value: credentials.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: credentials.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"nwSdkWazeOyqBiSy+9FfephMORo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","useNavigate","professionalsList","jsxDEV","_jsxDEV","Login","_s","login","setUser","credentials","setCredentials","email","password","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","matchedProfessional","find","pro","toLowerCase","role","userData","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/home/donatech/justconnect/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { professionalsList } from \"../data/professionals\"; // import the list\nimport \"./Login.css\";\n\nconst Login = () => {\n  const { login, setUser } = useContext(AuthContext);\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Check if user is in professionalsList (login without signup)\n    const matchedProfessional = professionalsList.find(\n      (pro) => pro.email.toLowerCase() === credentials.email.toLowerCase()\n    );\n\n    if (matchedProfessional) {\n      // Automatically login as professional without signup\n      setUser({ email: credentials.email, role: \"professional\", name: matchedProfessional.name });\n      navigate(\"/professional-dashboard\");\n      return;\n    }\n\n    // Otherwise, use normal login flow\n    try {\n      const userData = await login(credentials);\n\n      if (!userData || !userData.role) {\n        setError(\"Login failed. Please check your credentials.\");\n        return;\n      }\n\n      if (userData.role === \"admin\") {\n        navigate(\"/admin-dashboard\");\n      } else if (userData.role === \"user\") {\n        navigate(\"/user-dashboard\");\n      } else {\n        setError(\"Unrecognized user role.\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(\"Login failed. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>User Login</h2>\n      {error && <p className=\"error-message\">{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email Address\"\n          value={credentials.email}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}